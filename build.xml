<?xml version="1.0" encoding="UTF-8"?>

<project name="docurep" default="build" basedir=".">
    <property name="application" value="src/module"/>

    <target name="clean" description="Clean up and create artifact directories">
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <delete dir="${basedir}/build/api"/>

        <chmod dir="${basedir}/build/" perm="2777" />

        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <mkdir dir="${basedir}/build/api"/>
    </target>

    <target name="phpunit" description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
        <exec executable="phpunit">
            <!--
                THIS IS A HACK!
                Since this is my last week here, I'm not sure I'll get the solution
                before I leave - but this is as much information I've been able to
                debug and collect on the issue.

                PHP Garbage collection is causing a segmentation fault. To bypass -
                so the jenkins build will pass and not continously fail I'm
                disabling garbage collection. This "shouldn't" cause any underlying
                issues that I'm aware of - aside from a memory leak that should be
                free'd by the OS when php ends. But again, this is a hack and should not
                be considered a permanant solution.

                (phpunit code coverage exit code - Result:139)
                http://jenkins.atlanticbt.com:8080/view/PHP/job/PHP_Docurep/297/console
                (phpunit code coverage - zend_mm_heap corrupted)
                http://jenkins.atlanticbt.com:8080/view/PHP/job/PHP_Docurep/279/console

                It appears the error is happening around garbage collection
                and memory allocation (getting random zend_mm_heap_corrupted) during the
                code coverage calculation after PHPUnit is run.

                https://bugs.php.net/bug.php?id=53976
                http://stackoverflow.com/questions/14597468/how-to-diagnose-these-php-code-coverage-segmentation-and-zend-mm-heap-corrupted

                This is my gdb debug - but this is incorrect do to the fact I'm running
                suhosin patch w/ PHP and I don't think we use that in our systems.  But
                the underlying problem is there non the less `zend_mm_remove_from_free_list`
                Line: 47 - 52
                http://pastebin.com/93VP3hM9
            -->
            <arg line="-d zend.enable_gc=0" />
        </exec>
    </target>

    <target name="parallelTasks" description="Run the pdepend, phpmd, phpcpd, phpcs, phpdoc and phploc tasks in parallel using a maximum of 2 threads.">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs"/>
            <antcall target="phpdoc"/>
            <antcall target="phploc"/>
        </parallel>
    </target>

    <target name="composer" description="Update composer dependencies">
        <!-- Update composer in both project root, and server root -->
        <exec executable="php" dir="src">
            <arg line="composer.phar update" />
        </exec>
    </target>

    <target name="pdepend" description="Generate jdepend.xml and software metrics charts using PHP_Depend">
        <exec executable="pdepend">
        <arg line="--jdepend-xml=${basedir}/build/logs/jdepend.xml
                   --jdepend-chart=${basedir}/build/pdepend/dependencies.svg
                   --overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg
                   --suffix=php
                   --ignore=${application}/*/autoload_classmap.php,${application}/*/config,${application}/*/Module.php,${application}/*/view
                   ${application}" />
        </exec>
    </target>

    <target name="phpmd" description="Generate pmd.xml using PHPMD">
        <exec executable="phpmd">
            <arg line="${application}/
                       xml
                       codesize,design,naming,unusedcode,controversial
                       --reportfile ${basedir}/build/logs/pmd.xml
                       --exclude config,view,test" />
        </exec>
    </target>

    <target name="phpcpd" description="Generate pmd-cpd.xml using PHPCPD">
        <exec executable="phpcpd">
            <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml
                       --exclude config
                       --exclude view
                       --exclude test
                       ${application}" />
        </exec>
    </target>

    <target name="phploc" description="Generate phploc.csv">
        <exec executable="phploc">
        <arg line="--log-csv ${basedir}/build/logs/phploc.csv
                   --exclude config
                   --exclude view
                   --exclude test
                   ${application}" />
        </exec>
    </target>

    <target name="phpcs" description="Generate checkstyle.xml using PHP_CodeSniffer">
        <exec executable="phpcs">
        <arg line="--report=checkstyle
                   --report-file=${basedir}/build/logs/checkstyle.xml
                   --standard=Zend
                   --tab-width=4
                   --extensions=php
                   --ignore=view,config,test
                   -n
                   ${application}" />
        </exec>
    </target>

    <target name="phpdoc" description="Generate API documentation using PHPDocumentor">
        <exec executable="phpdoc" />
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
        <arg line="--log ${basedir}/build/logs
                   --source ${application}
                   --output ${basedir}/build/code-browser
                   -e *config*
                   -e *view*
                   -e *test*" />
        </exec>
    </target>

    <target name="build" depends="clean,composer,parallelTasks,phpunit,phpcb"/>
</project>
